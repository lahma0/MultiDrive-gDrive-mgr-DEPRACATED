<?xml version="1.0"?>
<doc>
<assembly>
<name>
MultiDrive
</name>
</assembly>
<members>
<member name="P:MultiDrive.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ExceptionType_FATAL_ERROR">
	<summary>
  Looks up a localized string similar to FATAL ERROR.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_delete">
	<summary>
  Looks up a localized string similar to delete.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_download">
	<summary>
  Looks up a localized string similar to download.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_open">
	<summary>
  Looks up a localized string similar to open.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_rename">
	<summary>
  Looks up a localized string similar to rename.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_star">
	<summary>
  Looks up a localized string similar to star.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.ImageKey_trash">
	<summary>
  Looks up a localized string similar to trash.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.LoopbackServerHtmlResponse">
	<summary>
  Looks up a localized string similar to &lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;{APP} - OAuth Authentication&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Authorization for {APP}&lt;/h1&gt;
    &lt;p&gt;The application has received your response. You can close this window now.&lt;/p&gt;
    &lt;script type='text/javascript'&gt;
      window.setTimeout(function() { window.open('', '_self', ''); window.close(); }, 100);
      if (window.opener) { window.opener.checkToken(); }
     &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_Click_OK_to_remove_the_following_users">
	<summary>
  Looks up a localized string similar to Click OK to remove the following users: .
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_Error_Exclamation">
	<summary>
  Looks up a localized string similar to Error!.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_Invalid_chunk_size">
	<summary>
  Looks up a localized string similar to Invalid Chunk-Size.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_question_Delete_file">
	<summary>
  Looks up a localized string similar to Delete files?.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_question_perm_delete">
	<summary>
  Looks up a localized string similar to Are you sure you want to permanently delete the selected file(s) (skip the trash?).
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_Remove_users_confirmation">
	<summary>
  Looks up a localized string similar to Remove User(s) Confirmation.
</summary>
</member><member name="P:MultiDrive.My.Resources.Resources.Message_Save_selected_files_to">
	<summary>
  Looks up a localized string similar to Save selected files to....
</summary>
</member><member name="T:MultiDrive.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:MultiDrive.AppData.SpecificPath">
	<summary>
 Path to the Application specific %AppData% folder.
 </summary>
</member><member name="M:MultiDrive.AppData.GetFilePath(System.String)">
	<summary>
 Returns the path to the specified AppData file. Ensures that the AppData folder exists.
 </summary>
</member><member name="M:MultiDrive.AppData.ReadFile(System.String)">
	<summary>
 Reads the specific file (if it exists), or returns null otherwise.
 </summary>
	<returns>File contents or null.</returns>
</member><member name="M:MultiDrive.AppData.Exists(System.String)">
	<summary>
 Returns true if the specified file exists in this AppData folder.
 </summary>
</member><member name="M:MultiDrive.AppData.WriteFile(System.String,System.Byte[])">
	<summary>
 Writes the content to the specified file. Will create directories and files as necessary.
 </summary>
</member><member name="T:MultiDrive.AppData">
	<summary>
 Provides access to the user's "AppData" folder
 </summary>
</member><member name="M:MultiDrive.CredentialsManager.CreateFullClientCredentials(MultiDrive.GoogleUser)">
	<summary>
 By prompting the user this constructs <code>FullClientCredentials</code> and stores them in the 
 <code>CredentialsFile</code>
	</summary>
</member><member name="M:MultiDrive.CredentialsManager.ParseFile(System.String)">
	<summary>
     Returns a IDictionary of keys and values from the CredentialsFile which is expected to be of the form
     <example>
       key=value
       key2=value2
     </example>
	</summary>
</member><member name="M:MultiDrive.AuthorizationMgr.RequestNativeAuthorization(Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient,DotNetOpenAuth.OAuth2.IAuthorizationState)">
	<summary>
 Requests authorization on a native client by using a predefined set of authorization flows.
 </summary>
	<param name="client">The client used for authentication.</param>
	<param name="authState">The requested authorization state.</param>
	<returns>The authorization code, or null if cancelled by the user.</returns>
	<exception cref="T:System.NotSupportedException">Thrown if no supported flow was found.</exception>
</member><member name="M:MultiDrive.AuthorizationMgr.RequestNativeAuthorization(Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient,System.String[])">
	<summary>
 Requests authorization on a native client by using a predefined set of authorization flows.
 </summary>
	<param name="client">The client used for authorization.</param>
	<param name="scopes">The requested set of scopes.</param>
	<returns>The authorized state.</returns>
	<exception cref="T:System.Security.Authentication.AuthenticationException">Thrown if the request was cancelled by the user.</exception>
</member><member name="M:MultiDrive.AuthorizationMgr.GetCachedRefreshToken(System.String,System.String,System.String)">
	<summary>
 Returns a cached refresh token for this application, or null if unavailable.
 </summary>
	<param name="storageName">The file name (without extension) used for storage.</param>
	<param name="key">The key to decrypt the data with.</param>
	<returns>The authorization state containing a Refresh Token, or null if unavailable</returns>
</member><member name="M:MultiDrive.AuthorizationMgr.SetCachedRefreshToken(System.String,System.String,DotNetOpenAuth.OAuth2.IAuthorizationState)">
	<summary>
 Saves a refresh token to the specified storage name, and encrypts it using the specified key.
 Returns cache token data-file's filename
 </summary>
</member><member name="P:MultiDrive.Util.ApplicationName">
	<summary>
 Returns the name of the application currently being run.
 </summary>
</member><member name="M:MultiDrive.Util.GetSingleLineClipboardContent(System.Int32)">
	<summary>
 Tries to retrieve and return the content of the clipboard. Will trim the content to the specified length.
 Removes all new line characters from the input.
 </summary>
	<remarks>Requires the STAThread attribute on the Main method.</remarks>
	<returns>Trimmed content of the clipboard, or null if unable to retrieve.</returns>
</member><member name="M:MultiDrive.Util.SetClipboard(System.String)">
	<summary>
 Changes the clipboard content to the specified value.
 </summary>
	<remarks>Requires the STAThread attribute on the Main method.</remarks>
	<param name="text"></param>
</member><member name="T:MultiDrive.Util">
	<summary>
 General Utility class for samples.
 </summary>
</member><member name="M:MultiDrive.LoopbackServerAuthorizationFlow.GetRandomUnusedPort">
	<summary>
 Returns a random, unused port.
 </summary>
</member><member name="M:MultiDrive.LoopbackServerAuthorizationFlow.HandleRequest(System.Net.HttpListenerContext)">
	<summary>
 Handles an incoming WebRequest.
 </summary>
	<param name="context">The request to handle.</param>
	<returns>The authorization code, or null if the process was cancelled.</returns>
</member><member name="T:MultiDrive.LoopbackServerAuthorizationFlow">
	<summary>
 A native authorization flow which uses a listening local loopback socket to fetch the authorization code.
 </summary>
	<remarks>Might not work if blocked by the system firewall.</remarks>
</member><member name="M:MultiDrive.INativeAuthorizationFlow.RetrieveAuthorization(DotNetOpenAuth.OAuth2.UserAgentClient,DotNetOpenAuth.OAuth2.IAuthorizationState)">
	<summary>
 Retrieves the authorization of the user for the given AuthorizationState.
 </summary>
	<param name="client">The client used for authentication.</param>
	<param name="authorizationState">The state requested.</param>
	<returns>The authorization code, or null if the user cancelled the request.</returns>
	<exception cref="T:System.NotSupportedException">Thrown if this flow is not supported.</exception>
</member><member name="T:MultiDrive.INativeAuthorizationFlow">
	<summary>
 An authorization flow is the process of obtaining an AuthorizationCode 
 when provided with an IAuthorizationState.
 </summary>
</member><member name="T:MultiDrive.WindowTitleNativeAuthorizationFlow">
	<summary>
 Describes a flow which captures the authorization code out of the window title of the browser.
 </summary>
	<remarks>Works on Windows, but not on Unix. Will failback to copy/paste mode if unsupported.</remarks>
</member>
</members>
</doc>